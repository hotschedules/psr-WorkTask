<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="num_users" elementType="Argument">
            <stringProp name="Argument.name">num_users</stringProp>
            <stringProp name="Argument.value">${__P(threads,30)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ramp_up_time" elementType="Argument">
            <stringProp name="Argument.name">ramp_up_time</stringProp>
            <stringProp name="Argument.value">${__P(rampup, 60)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="duration" elementType="Argument">
            <stringProp name="Argument.name">duration</stringProp>
            <stringProp name="Argument.value">${__P(duration, 300)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="env" elementType="Argument">
            <stringProp name="Argument.name">env</stringProp>
            <stringProp name="Argument.value">api.bodhi-stg.io</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="myUUID" elementType="Argument">
            <stringProp name="Argument.name">myUUID</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="myStore" elementType="Argument">
            <stringProp name="Argument.name">myStore</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Grafana" elementType="Argument">
            <stringProp name="Argument.name">Grafana</stringProp>
            <stringProp name="Argument.value">https://psr-influxdb-infra-611b.aivencloud.com:12082/write?db=psr&amp;u=psr&amp;p=qy1e7hqeuk09p1qf</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="AppName" elementType="Argument">
            <stringProp name="Argument.name">AppName</stringProp>
            <stringProp name="Argument.value">Workflow</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Time" elementType="Argument">
            <stringProp name="Argument.name">Time</stringProp>
            <stringProp name="Argument.value">${__time(MMddyyHHmm,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TimeStart" elementType="Argument">
            <stringProp name="Argument.name">TimeStart</stringProp>
            <stringProp name="Argument.value">2018-08-03T09:00:00.000Z</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">C:\data\flood\files\Namespace.txt</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">nspace</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
      </CSVDataSet>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">11</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1510168715000</longProp>
        <longProp name="ThreadGroup.end_time">1510168715000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies">
            <elementProp name="KC_RESTART" elementType="Cookie" testname="KC_RESTART">
              <stringProp name="Cookie.value">${kccookie_g1}</stringProp>
              <stringProp name="Cookie.domain">login.bodhi-stg.io</stringProp>
              <stringProp name="Cookie.path">/auth/realms/hotschedules</stringProp>
              <boolProp name="Cookie.secure">true</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
          </collectionProp>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Login" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="redirect" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">protected/index.html</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">redirect</stringProp>
              </elementProp>
              <elementProp name="namespace" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${nspace}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">namespace</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">authp.bodhi-stg.io</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">login?redirect=protected/index.html&amp;namespace=${nspace}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Location Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="RegexExtractor.refname">location</stringProp>
            <stringProp name="RegexExtractor.regex">redirect_uri=(.*?)\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">walkerlocation</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Play Session Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="RegexExtractor.refname">playcookie</stringProp>
            <stringProp name="RegexExtractor.regex">Set-Cookie: PLAY_SESSION=(.*?);</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">walkerplaycookie</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="GET Debug" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Redirect" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">login.bodhi-stg.io</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">auth/realms/hotschedules/protocol/openid-connect/auth?response_type=code&amp;client_id=urn%3Amace%3Aoidc%3Ahotschedules.com&amp;redirect_uri=${location}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Code Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">code</stringProp>
            <stringProp name="RegexExtractor.regex">code=(.*?)&amp;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">walker</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Referer Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="RegexExtractor.refname">referer</stringProp>
            <stringProp name="RegexExtractor.regex">Location: (.*?)\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">walker2</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="KC Cookie Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="RegexExtractor.refname">kccookie</stringProp>
            <stringProp name="RegexExtractor.regex">KC_RESTART=(.*?);</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">walkerkccookie</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Execution Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">execution</stringProp>
            <stringProp name="RegexExtractor.regex">execution=(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">walkerexecution</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="GET Debug" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST Login" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">admin__${nspace}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="login" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">Log in</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">login</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">admin__${nspace}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">login.bodhi-stg.io</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">auth/realms/hotschedules/login-actions/authenticate?code=${code}&amp;execution=${execution}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://login.bodhi-stg.io</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://login.bodhi-stg.io/auth/realms/hotschedules/protocol/openid-connect/auth?response_type=code&amp;client_id=urn%3Amace%3Aoidc%3Ahotschedules.com&amp;redirect_uri=${location}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Cookie</stringProp>
                <stringProp name="Header.value">KC_RESTART=${kccookie_g1}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">login.bodhi-stg.io</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ID Token Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idToken</stringProp>
            <stringProp name="RegexExtractor.regex">id_token=(.*?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">walkeridtoken</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">${__setProperty(${nspace}, ${idToken})};
</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="POST debug" enabled="false">
            <boolProp name="displayJMeterProperties">true</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Stores" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://api.bodhi-stg.io/${nspace}/resources/Store</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-task-list-manager-ui/</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
              </elementProp>
              <elementProp name="Cookie" elementType="Header">
                <stringProp name="Header.name">Cookie</stringProp>
                <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="RandomTimer.range">89.60000000000001</stringProp>
            <stringProp name="ConstantTimer.delay">179.20000000000002</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="StoreName" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">storeName</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(\w*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">StoreName Error</stringProp>
            <stringProp name="RegexExtractor.match_number">-1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">storeName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Write storenames to file" enabled="true">
          <stringProp name="cacheKey">b67260ff-18ca-43a3-9786-0c746ca1ce3b</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import org.apache.commons.io.FileUtils;

String tempStore = &quot;&quot;;
int count = 0;
String namespace = &quot;&quot;;

count = Integer.parseInt(vars.get(&quot;storeName_matchNr&quot;));

for(int i = 1; i &lt;= count; i++)
{
	tempStore = vars.get(&quot;storeName_${i}&quot;);
	namespace = vars.get(&quot;nspace&quot;);

	FileUtils.writeStringToFile(new java.io.File(&quot;/data/flood/files/Namespace.txt&quot;), 
     &quot;${namespace},${tempStore},\r\n&quot;, 
     &quot;UTF-8&quot;, 
      true);
}




</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">sampler.getCookieManager().clear();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TaskList_Workflow" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${num_users}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${ramp_up_time}</stringProp>
        <longProp name="ThreadGroup.start_time">1499355740000</longProp>
        <longProp name="ThreadGroup.end_time">1499355740000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${duration}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies">
            <elementProp name="ID_TOKEN" elementType="Cookie" testname="ID_TOKEN">
              <stringProp name="Cookie.value">${__property(${nspace})}</stringProp>
              <stringProp name="Cookie.domain">.bodhi-stg.io</stringProp>
              <stringProp name="Cookie.path"></stringProp>
              <boolProp name="Cookie.secure">true</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="RUSK" elementType="Cookie" testname="RUSK">
              <stringProp name="Cookie.value">&quot;&quot;</stringProp>
              <stringProp name="Cookie.domain"></stringProp>
              <stringProp name="Cookie.path"></stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
          </collectionProp>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Cookie</stringProp>
              <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">1000</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">counter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Generate UUID" enabled="true">
          <stringProp name="cacheKey">821f79ee-be94-48e9-a213-224104748af7</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">vars.put(&quot;myUUID&quot;,UUID.randomUUID().toString());</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TaskList" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Read stores from file" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Namespace.txt</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">nspace,store_Name</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Catalyst-iw-config-ui Landing" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">apps.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/catalyst-iw-config-ui</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Permissions" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/permissions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-config-ui/</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Task List" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;name&quot;:&quot;JPC ${myUUID}&quot;,&quot;description&quot;:&quot;JPC ${myUUID}&quot;,&quot;tasks&quot;:[],&quot;hierarchyPath&quot;:&quot;::&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/tasklist/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-task-list-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">90.0</stringProp>
              <stringProp name="ConstantTimer.delay">180.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get Location of Added Resource" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
              <stringProp name="RegexExtractor.refname">taskListLocation</stringProp>
              <stringProp name="RegexExtractor.regex">\&quot;(.*)\&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get TaskList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/tasklist/${taskListLocation}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-config-ui/</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Calculation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pendingItems&quot;:[{&quot;id&quot;:&quot;${myUUID}&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;calculation&quot;,&quot;icon&quot;:&quot;ico-calculator&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;numeric&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;calculation&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Calculation&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;formula&quot;]},&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;,&quot;precision&quot;:1,&quot;formula&quot;:[{&quot;value&quot;:&quot;3&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;80c4b7fb-e169-cd77-5983-51c4dfedb244&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;+&quot;,&quot;type&quot;:&quot;OPERATOR&quot;,&quot;key&quot;:&quot;9b149c84-4129-255e-e539-9d7410734955&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;4&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;c6e058ad-a7f4-8784-c39b-8de9aee75efd&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false}]},&quot;isSoftDeleted&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/tasklist/${taskListLocation}/pending</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-task-list-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">93.2</stringProp>
              <stringProp name="ConstantTimer.delay">186.4</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add File Upload" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pendingItems&quot;:[{&quot;id&quot;:&quot;${myUUID}&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;calculation&quot;,&quot;icon&quot;:&quot;ico-calculator&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;numeric&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;calculation&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Calculation&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;formula&quot;]},&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;,&quot;precision&quot;:1,&quot;formula&quot;:[{&quot;value&quot;:&quot;3&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;80c4b7fb-e169-cd77-5983-51c4dfedb244&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;+&quot;,&quot;type&quot;:&quot;OPERATOR&quot;,&quot;key&quot;:&quot;9b149c84-4129-255e-e539-9d7410734955&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;4&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;c6e058ad-a7f4-8784-c39b-8de9aee75efd&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;1083dd6d-f6e5-6abc-6139-6375fb4951c3&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;file-upload&quot;,&quot;icon&quot;:&quot;ico-upload&quot;,&quot;classification&quot;:&quot;upload&quot;,&quot;inputType&quot;:&quot;upload&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;file-upload&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;File Upload&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;fileTypes&quot;:[{&quot;display&quot;:&quot;PDF&quot;},{&quot;display&quot;:&quot;PNG&quot;},{&quot;display&quot;:&quot;GIF&quot;},{&quot;display&quot;:&quot;JPEG&quot;},{&quot;display&quot;:&quot;TXT&quot;},{&quot;display&quot;:&quot;DOC&quot;},{&quot;display&quot;:&quot;DOCX&quot;},{&quot;display&quot;:&quot;PPTX&quot;},{&quot;display&quot;:&quot;XLS&quot;},{&quot;display&quot;:&quot;XLSX&quot;},{&quot;display&quot;:&quot;PPT&quot;}]},&quot;isSoftDeleted&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/tasklist/${taskListLocation}/pending</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-task-list-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">90.4</stringProp>
              <stringProp name="ConstantTimer.delay">180.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Signature" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pendingItems&quot;:[{&quot;id&quot;:&quot;${myUUID}&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;calculation&quot;,&quot;icon&quot;:&quot;ico-calculator&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;numeric&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;calculation&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Calculation&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;formula&quot;]},&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;,&quot;precision&quot;:1,&quot;formula&quot;:[{&quot;value&quot;:&quot;3&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;80c4b7fb-e169-cd77-5983-51c4dfedb244&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;+&quot;,&quot;type&quot;:&quot;OPERATOR&quot;,&quot;key&quot;:&quot;9b149c84-4129-255e-e539-9d7410734955&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;4&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;c6e058ad-a7f4-8784-c39b-8de9aee75efd&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;1083dd6d-f6e5-6abc-6139-6375fb4951c3&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;file-upload&quot;,&quot;icon&quot;:&quot;ico-upload&quot;,&quot;classification&quot;:&quot;upload&quot;,&quot;inputType&quot;:&quot;upload&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;file-upload&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;File Upload&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;fileTypes&quot;:[{&quot;display&quot;:&quot;PDF&quot;},{&quot;display&quot;:&quot;PNG&quot;},{&quot;display&quot;:&quot;GIF&quot;},{&quot;display&quot;:&quot;JPEG&quot;},{&quot;display&quot;:&quot;TXT&quot;},{&quot;display&quot;:&quot;DOC&quot;},{&quot;display&quot;:&quot;DOCX&quot;},{&quot;display&quot;:&quot;PPTX&quot;},{&quot;display&quot;:&quot;XLS&quot;},{&quot;display&quot;:&quot;XLSX&quot;},{&quot;display&quot;:&quot;PPT&quot;}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;5e213b58-6252-2c65-52cb-df2d8bd7c3ad&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;signature&quot;,&quot;icon&quot;:&quot;ico-pencil&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;signature&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;signature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Signature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;sigVal&quot;:1,&quot;allowAuto&quot;:false},&quot;isSoftDeleted&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/tasklist/${taskListLocation}/pending</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-task-list-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">92.4</stringProp>
              <stringProp name="ConstantTimer.delay">184.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Employee" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pendingItems&quot;:[{&quot;id&quot;:&quot;${myUUID}&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;calculation&quot;,&quot;icon&quot;:&quot;ico-calculator&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;numeric&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;calculation&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Calculation&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;formula&quot;]},&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;,&quot;precision&quot;:1,&quot;formula&quot;:[{&quot;value&quot;:&quot;3&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;80c4b7fb-e169-cd77-5983-51c4dfedb244&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;+&quot;,&quot;type&quot;:&quot;OPERATOR&quot;,&quot;key&quot;:&quot;9b149c84-4129-255e-e539-9d7410734955&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;4&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;c6e058ad-a7f4-8784-c39b-8de9aee75efd&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;1083dd6d-f6e5-6abc-6139-6375fb4951c3&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;file-upload&quot;,&quot;icon&quot;:&quot;ico-upload&quot;,&quot;classification&quot;:&quot;upload&quot;,&quot;inputType&quot;:&quot;upload&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;file-upload&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;File Upload&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;fileTypes&quot;:[{&quot;display&quot;:&quot;PDF&quot;},{&quot;display&quot;:&quot;PNG&quot;},{&quot;display&quot;:&quot;GIF&quot;},{&quot;display&quot;:&quot;JPEG&quot;},{&quot;display&quot;:&quot;TXT&quot;},{&quot;display&quot;:&quot;DOC&quot;},{&quot;display&quot;:&quot;DOCX&quot;},{&quot;display&quot;:&quot;PPTX&quot;},{&quot;display&quot;:&quot;XLS&quot;},{&quot;display&quot;:&quot;XLSX&quot;},{&quot;display&quot;:&quot;PPT&quot;}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;5e213b58-6252-2c65-52cb-df2d8bd7c3ad&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;signature&quot;,&quot;icon&quot;:&quot;ico-pencil&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;signature&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;signature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Signature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;sigVal&quot;:1,&quot;allowAuto&quot;:false},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;0be2a787-b181-3325-3cfe-8e0eb57bde23&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;employee&quot;,&quot;icon&quot;:&quot;ico-human&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;select&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;employee&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Select Employee&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]}},&quot;isSoftDeleted&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/tasklist/${taskListLocation}/pending</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-task-list-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">91.2</stringProp>
              <stringProp name="ConstantTimer.delay">182.4</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Time Picker" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pendingItems&quot;:[{&quot;id&quot;:&quot;${myUUID}&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;calculation&quot;,&quot;icon&quot;:&quot;ico-calculator&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;numeric&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;calculation&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Calculation&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;formula&quot;]},&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;,&quot;precision&quot;:1,&quot;formula&quot;:[{&quot;value&quot;:&quot;3&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;80c4b7fb-e169-cd77-5983-51c4dfedb244&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;+&quot;,&quot;type&quot;:&quot;OPERATOR&quot;,&quot;key&quot;:&quot;9b149c84-4129-255e-e539-9d7410734955&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;4&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;c6e058ad-a7f4-8784-c39b-8de9aee75efd&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;1083dd6d-f6e5-6abc-6139-6375fb4951c3&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;file-upload&quot;,&quot;icon&quot;:&quot;ico-upload&quot;,&quot;classification&quot;:&quot;upload&quot;,&quot;inputType&quot;:&quot;upload&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;file-upload&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;File Upload&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;fileTypes&quot;:[{&quot;display&quot;:&quot;PDF&quot;},{&quot;display&quot;:&quot;PNG&quot;},{&quot;display&quot;:&quot;GIF&quot;},{&quot;display&quot;:&quot;JPEG&quot;},{&quot;display&quot;:&quot;TXT&quot;},{&quot;display&quot;:&quot;DOC&quot;},{&quot;display&quot;:&quot;DOCX&quot;},{&quot;display&quot;:&quot;PPTX&quot;},{&quot;display&quot;:&quot;XLS&quot;},{&quot;display&quot;:&quot;XLSX&quot;},{&quot;display&quot;:&quot;PPT&quot;}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;5e213b58-6252-2c65-52cb-df2d8bd7c3ad&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;signature&quot;,&quot;icon&quot;:&quot;ico-pencil&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;signature&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;signature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Signature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;sigVal&quot;:1,&quot;allowAuto&quot;:false},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;0be2a787-b181-3325-3cfe-8e0eb57bde23&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;employee&quot;,&quot;icon&quot;:&quot;ico-human&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;select&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;employee&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Select Employee&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;bf6c0c54-269a-9d23-0ad5-fc355037719c&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;timepicker&quot;,&quot;icon&quot;:&quot;ico-clock&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;timepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Time_Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;acceptableTimeRange&quot;:{&quot;start&quot;:&quot;2017-11-15T10:00:00.000Z&quot;,&quot;end&quot;:&quot;2017-11-15T10:00:00.000Z&quot;}},&quot;isSoftDeleted&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/tasklist/${taskListLocation}/pending</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-task-list-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">91.60000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">183.20000000000002</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Date Picker" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pendingItems&quot;:[{&quot;id&quot;:&quot;${myUUID}&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;calculation&quot;,&quot;icon&quot;:&quot;ico-calculator&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;numeric&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;calculation&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Calculation&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;formula&quot;]},&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;,&quot;precision&quot;:1,&quot;formula&quot;:[{&quot;value&quot;:&quot;3&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;80c4b7fb-e169-cd77-5983-51c4dfedb244&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;+&quot;,&quot;type&quot;:&quot;OPERATOR&quot;,&quot;key&quot;:&quot;9b149c84-4129-255e-e539-9d7410734955&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;4&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;c6e058ad-a7f4-8784-c39b-8de9aee75efd&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;1083dd6d-f6e5-6abc-6139-6375fb4951c3&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;file-upload&quot;,&quot;icon&quot;:&quot;ico-upload&quot;,&quot;classification&quot;:&quot;upload&quot;,&quot;inputType&quot;:&quot;upload&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;file-upload&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;File Upload&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;fileTypes&quot;:[{&quot;display&quot;:&quot;PDF&quot;},{&quot;display&quot;:&quot;PNG&quot;},{&quot;display&quot;:&quot;GIF&quot;},{&quot;display&quot;:&quot;JPEG&quot;},{&quot;display&quot;:&quot;TXT&quot;},{&quot;display&quot;:&quot;DOC&quot;},{&quot;display&quot;:&quot;DOCX&quot;},{&quot;display&quot;:&quot;PPTX&quot;},{&quot;display&quot;:&quot;XLS&quot;},{&quot;display&quot;:&quot;XLSX&quot;},{&quot;display&quot;:&quot;PPT&quot;}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;5e213b58-6252-2c65-52cb-df2d8bd7c3ad&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;signature&quot;,&quot;icon&quot;:&quot;ico-pencil&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;signature&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;signature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Signature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;sigVal&quot;:1,&quot;allowAuto&quot;:false},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;0be2a787-b181-3325-3cfe-8e0eb57bde23&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;employee&quot;,&quot;icon&quot;:&quot;ico-human&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;select&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;employee&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Select Employee&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;bf6c0c54-269a-9d23-0ad5-fc355037719c&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;timepicker&quot;,&quot;icon&quot;:&quot;ico-clock&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;timepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Time_Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;acceptableTimeRange&quot;:{&quot;start&quot;:&quot;2017-11-15T10:00:00.000Z&quot;,&quot;end&quot;:&quot;2017-11-15T10:00:00.000Z&quot;}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;f60d2422-4b53-6ba8-8d0d-a1048f97edc1&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;datepicker&quot;,&quot;icon&quot;:&quot;ico-date&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;datepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Date Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;currentDay&quot;:true,&quot;acceptableDateRange&quot;:{&quot;daysToStart&quot;:0,&quot;daysToEnd&quot;:0}},&quot;isSoftDeleted&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/tasklist/${taskListLocation}/pending</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-task-list-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">90.0</stringProp>
              <stringProp name="ConstantTimer.delay">180.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Temperature" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pendingItems&quot;:[{&quot;id&quot;:&quot;${myUUID}&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;calculation&quot;,&quot;icon&quot;:&quot;ico-calculator&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;numeric&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;calculation&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Calculation&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;formula&quot;]},&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;,&quot;precision&quot;:1,&quot;formula&quot;:[{&quot;value&quot;:&quot;3&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;80c4b7fb-e169-cd77-5983-51c4dfedb244&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;+&quot;,&quot;type&quot;:&quot;OPERATOR&quot;,&quot;key&quot;:&quot;9b149c84-4129-255e-e539-9d7410734955&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;4&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;c6e058ad-a7f4-8784-c39b-8de9aee75efd&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;1083dd6d-f6e5-6abc-6139-6375fb4951c3&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;file-upload&quot;,&quot;icon&quot;:&quot;ico-upload&quot;,&quot;classification&quot;:&quot;upload&quot;,&quot;inputType&quot;:&quot;upload&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;file-upload&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;File Upload&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;fileTypes&quot;:[{&quot;display&quot;:&quot;PDF&quot;},{&quot;display&quot;:&quot;PNG&quot;},{&quot;display&quot;:&quot;GIF&quot;},{&quot;display&quot;:&quot;JPEG&quot;},{&quot;display&quot;:&quot;TXT&quot;},{&quot;display&quot;:&quot;DOC&quot;},{&quot;display&quot;:&quot;DOCX&quot;},{&quot;display&quot;:&quot;PPTX&quot;},{&quot;display&quot;:&quot;XLS&quot;},{&quot;display&quot;:&quot;XLSX&quot;},{&quot;display&quot;:&quot;PPT&quot;}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;5e213b58-6252-2c65-52cb-df2d8bd7c3ad&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;signature&quot;,&quot;icon&quot;:&quot;ico-pencil&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;signature&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;signature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Signature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;sigVal&quot;:1,&quot;allowAuto&quot;:false},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;0be2a787-b181-3325-3cfe-8e0eb57bde23&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;employee&quot;,&quot;icon&quot;:&quot;ico-human&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;select&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;employee&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Select Employee&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;bf6c0c54-269a-9d23-0ad5-fc355037719c&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;timepicker&quot;,&quot;icon&quot;:&quot;ico-clock&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;timepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Time_Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;acceptableTimeRange&quot;:{&quot;start&quot;:&quot;2017-11-15T10:00:00.000Z&quot;,&quot;end&quot;:&quot;2017-11-15T10:00:00.000Z&quot;}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;f60d2422-4b53-6ba8-8d0d-a1048f97edc1&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;datepicker&quot;,&quot;icon&quot;:&quot;ico-date&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;datepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Date Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;currentDay&quot;:true,&quot;acceptableDateRange&quot;:{&quot;daysToStart&quot;:0,&quot;daysToEnd&quot;:0}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;3b28e407-1378-0840-06a3-599a13ab1fba&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;temperature&quot;,&quot;icon&quot;:&quot;ico-thermometer&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;number&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;temperature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Temperature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;minValue&quot;,&quot;maxValue&quot;]},&quot;minValue&quot;:&quot;3&quot;,&quot;maxValue&quot;:&quot;33&quot;,&quot;selectedUnitIndex&quot;:1,&quot;unit&quot;:&quot;Â°C&quot;,&quot;requireFollowUp&quot;:false},&quot;isSoftDeleted&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/tasklist/${taskListLocation}/pending</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-task-list-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">90.80000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">181.60000000000002</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Rating Scale" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pendingItems&quot;:[{&quot;id&quot;:&quot;${myUUID}&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;calculation&quot;,&quot;icon&quot;:&quot;ico-calculator&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;numeric&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;calculation&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Calculation&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;formula&quot;]},&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;,&quot;precision&quot;:1,&quot;formula&quot;:[{&quot;value&quot;:&quot;3&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;80c4b7fb-e169-cd77-5983-51c4dfedb244&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;+&quot;,&quot;type&quot;:&quot;OPERATOR&quot;,&quot;key&quot;:&quot;9b149c84-4129-255e-e539-9d7410734955&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;4&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;c6e058ad-a7f4-8784-c39b-8de9aee75efd&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;1083dd6d-f6e5-6abc-6139-6375fb4951c3&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;file-upload&quot;,&quot;icon&quot;:&quot;ico-upload&quot;,&quot;classification&quot;:&quot;upload&quot;,&quot;inputType&quot;:&quot;upload&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;file-upload&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;File Upload&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;fileTypes&quot;:[{&quot;display&quot;:&quot;PDF&quot;},{&quot;display&quot;:&quot;PNG&quot;},{&quot;display&quot;:&quot;GIF&quot;},{&quot;display&quot;:&quot;JPEG&quot;},{&quot;display&quot;:&quot;TXT&quot;},{&quot;display&quot;:&quot;DOC&quot;},{&quot;display&quot;:&quot;DOCX&quot;},{&quot;display&quot;:&quot;PPTX&quot;},{&quot;display&quot;:&quot;XLS&quot;},{&quot;display&quot;:&quot;XLSX&quot;},{&quot;display&quot;:&quot;PPT&quot;}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;5e213b58-6252-2c65-52cb-df2d8bd7c3ad&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;signature&quot;,&quot;icon&quot;:&quot;ico-pencil&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;signature&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;signature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Signature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;sigVal&quot;:1,&quot;allowAuto&quot;:false},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;0be2a787-b181-3325-3cfe-8e0eb57bde23&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;employee&quot;,&quot;icon&quot;:&quot;ico-human&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;select&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;employee&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Select Employee&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;bf6c0c54-269a-9d23-0ad5-fc355037719c&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;timepicker&quot;,&quot;icon&quot;:&quot;ico-clock&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;timepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Time_Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;acceptableTimeRange&quot;:{&quot;start&quot;:&quot;2017-11-15T10:00:00.000Z&quot;,&quot;end&quot;:&quot;2017-11-15T10:00:00.000Z&quot;}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;f60d2422-4b53-6ba8-8d0d-a1048f97edc1&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;datepicker&quot;,&quot;icon&quot;:&quot;ico-date&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;datepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Date Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;currentDay&quot;:true,&quot;acceptableDateRange&quot;:{&quot;daysToStart&quot;:0,&quot;daysToEnd&quot;:0}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;3b28e407-1378-0840-06a3-599a13ab1fba&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;temperature&quot;,&quot;icon&quot;:&quot;ico-thermometer&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;number&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;temperature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Temperature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;minValue&quot;,&quot;maxValue&quot;]},&quot;minValue&quot;:&quot;3&quot;,&quot;maxValue&quot;:&quot;33&quot;,&quot;selectedUnitIndex&quot;:1,&quot;unit&quot;:&quot;Â°C&quot;,&quot;requireFollowUp&quot;:false},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;0d53c590-c015-1c9b-d8fe-758107123930&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;rating&quot;,&quot;icon&quot;:&quot;ico-star&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;rating&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;rating&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Rating&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;ratingScale&quot;:&quot;stars&quot;,&quot;ratingDescription&quot;:{&quot;1&quot;:&quot;&quot;,&quot;2&quot;:&quot;&quot;,&quot;3&quot;:&quot;&quot;,&quot;4&quot;:&quot;&quot;,&quot;5&quot;:&quot;&quot;}},&quot;isSoftDeleted&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/tasklist/${taskListLocation}/pending</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-task-list-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">90.0</stringProp>
              <stringProp name="ConstantTimer.delay">180.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Number" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pendingItems&quot;:[{&quot;id&quot;:&quot;${myUUID}&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;calculation&quot;,&quot;icon&quot;:&quot;ico-calculator&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;numeric&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;calculation&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Calculation&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;formula&quot;]},&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;,&quot;precision&quot;:1,&quot;formula&quot;:[{&quot;value&quot;:&quot;3&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;80c4b7fb-e169-cd77-5983-51c4dfedb244&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;+&quot;,&quot;type&quot;:&quot;OPERATOR&quot;,&quot;key&quot;:&quot;9b149c84-4129-255e-e539-9d7410734955&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;4&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;c6e058ad-a7f4-8784-c39b-8de9aee75efd&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;1083dd6d-f6e5-6abc-6139-6375fb4951c3&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;file-upload&quot;,&quot;icon&quot;:&quot;ico-upload&quot;,&quot;classification&quot;:&quot;upload&quot;,&quot;inputType&quot;:&quot;upload&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;file-upload&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;File Upload&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;fileTypes&quot;:[{&quot;display&quot;:&quot;PDF&quot;},{&quot;display&quot;:&quot;PNG&quot;},{&quot;display&quot;:&quot;GIF&quot;},{&quot;display&quot;:&quot;JPEG&quot;},{&quot;display&quot;:&quot;TXT&quot;},{&quot;display&quot;:&quot;DOC&quot;},{&quot;display&quot;:&quot;DOCX&quot;},{&quot;display&quot;:&quot;PPTX&quot;},{&quot;display&quot;:&quot;XLS&quot;},{&quot;display&quot;:&quot;XLSX&quot;},{&quot;display&quot;:&quot;PPT&quot;}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;5e213b58-6252-2c65-52cb-df2d8bd7c3ad&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;signature&quot;,&quot;icon&quot;:&quot;ico-pencil&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;signature&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;signature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Signature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;sigVal&quot;:1,&quot;allowAuto&quot;:false},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;0be2a787-b181-3325-3cfe-8e0eb57bde23&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;employee&quot;,&quot;icon&quot;:&quot;ico-human&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;select&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;employee&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Select Employee&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;bf6c0c54-269a-9d23-0ad5-fc355037719c&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;timepicker&quot;,&quot;icon&quot;:&quot;ico-clock&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;timepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Time_Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;acceptableTimeRange&quot;:{&quot;start&quot;:&quot;2017-11-15T10:00:00.000Z&quot;,&quot;end&quot;:&quot;2017-11-15T10:00:00.000Z&quot;}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;f60d2422-4b53-6ba8-8d0d-a1048f97edc1&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;datepicker&quot;,&quot;icon&quot;:&quot;ico-date&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;datepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Date Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;currentDay&quot;:true,&quot;acceptableDateRange&quot;:{&quot;daysToStart&quot;:0,&quot;daysToEnd&quot;:0}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;3b28e407-1378-0840-06a3-599a13ab1fba&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;temperature&quot;,&quot;icon&quot;:&quot;ico-thermometer&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;number&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;temperature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Temperature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;minValue&quot;,&quot;maxValue&quot;]},&quot;minValue&quot;:&quot;3&quot;,&quot;maxValue&quot;:&quot;33&quot;,&quot;selectedUnitIndex&quot;:1,&quot;unit&quot;:&quot;Â°C&quot;,&quot;requireFollowUp&quot;:false},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;0d53c590-c015-1c9b-d8fe-758107123930&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;rating&quot;,&quot;icon&quot;:&quot;ico-star&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;rating&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;rating&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Rating&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;ratingScale&quot;:&quot;stars&quot;,&quot;ratingDescription&quot;:{&quot;1&quot;:&quot;&quot;,&quot;2&quot;:&quot;&quot;,&quot;3&quot;:&quot;&quot;,&quot;4&quot;:&quot;&quot;,&quot;5&quot;:&quot;&quot;}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;4f9d2f81-4c3f-c78d-6e24-9983d35118f8&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;numeric-entry&quot;,&quot;icon&quot;:&quot;ico-numbers&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;number&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;numeric-entry&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Numeric&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;precision&quot;:0,&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;},&quot;isSoftDeleted&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/tasklist/${taskListLocation}/pending</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-task-list-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">90.80000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">181.60000000000002</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Text" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pendingItems&quot;:[{&quot;id&quot;:&quot;${myUUID}&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;calculation&quot;,&quot;icon&quot;:&quot;ico-calculator&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;numeric&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;calculation&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Calculation&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;formula&quot;]},&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;,&quot;precision&quot;:1,&quot;formula&quot;:[{&quot;value&quot;:&quot;3&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;80c4b7fb-e169-cd77-5983-51c4dfedb244&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;+&quot;,&quot;type&quot;:&quot;OPERATOR&quot;,&quot;key&quot;:&quot;9b149c84-4129-255e-e539-9d7410734955&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;4&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;c6e058ad-a7f4-8784-c39b-8de9aee75efd&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;1083dd6d-f6e5-6abc-6139-6375fb4951c3&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;file-upload&quot;,&quot;icon&quot;:&quot;ico-upload&quot;,&quot;classification&quot;:&quot;upload&quot;,&quot;inputType&quot;:&quot;upload&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;file-upload&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;File Upload&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;fileTypes&quot;:[{&quot;display&quot;:&quot;PDF&quot;},{&quot;display&quot;:&quot;PNG&quot;},{&quot;display&quot;:&quot;GIF&quot;},{&quot;display&quot;:&quot;JPEG&quot;},{&quot;display&quot;:&quot;TXT&quot;},{&quot;display&quot;:&quot;DOC&quot;},{&quot;display&quot;:&quot;DOCX&quot;},{&quot;display&quot;:&quot;PPTX&quot;},{&quot;display&quot;:&quot;XLS&quot;},{&quot;display&quot;:&quot;XLSX&quot;},{&quot;display&quot;:&quot;PPT&quot;}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;5e213b58-6252-2c65-52cb-df2d8bd7c3ad&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;signature&quot;,&quot;icon&quot;:&quot;ico-pencil&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;signature&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;signature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Signature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;sigVal&quot;:1,&quot;allowAuto&quot;:false},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;0be2a787-b181-3325-3cfe-8e0eb57bde23&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;employee&quot;,&quot;icon&quot;:&quot;ico-human&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;select&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;employee&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Select Employee&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;bf6c0c54-269a-9d23-0ad5-fc355037719c&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;timepicker&quot;,&quot;icon&quot;:&quot;ico-clock&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;timepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Time_Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;acceptableTimeRange&quot;:{&quot;start&quot;:&quot;2017-11-15T10:00:00.000Z&quot;,&quot;end&quot;:&quot;2017-11-15T10:00:00.000Z&quot;}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;f60d2422-4b53-6ba8-8d0d-a1048f97edc1&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;datepicker&quot;,&quot;icon&quot;:&quot;ico-date&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;datepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Date Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;currentDay&quot;:true,&quot;acceptableDateRange&quot;:{&quot;daysToStart&quot;:0,&quot;daysToEnd&quot;:0}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;3b28e407-1378-0840-06a3-599a13ab1fba&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;temperature&quot;,&quot;icon&quot;:&quot;ico-thermometer&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;number&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;temperature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Temperature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;minValue&quot;,&quot;maxValue&quot;]},&quot;minValue&quot;:&quot;3&quot;,&quot;maxValue&quot;:&quot;33&quot;,&quot;selectedUnitIndex&quot;:1,&quot;unit&quot;:&quot;Â°C&quot;,&quot;requireFollowUp&quot;:false},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;0d53c590-c015-1c9b-d8fe-758107123930&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;rating&quot;,&quot;icon&quot;:&quot;ico-star&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;rating&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;rating&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Rating&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;ratingScale&quot;:&quot;stars&quot;,&quot;ratingDescription&quot;:{&quot;1&quot;:&quot;&quot;,&quot;2&quot;:&quot;&quot;,&quot;3&quot;:&quot;&quot;,&quot;4&quot;:&quot;&quot;,&quot;5&quot;:&quot;&quot;}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;4f9d2f81-4c3f-c78d-6e24-9983d35118f8&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;numeric-entry&quot;,&quot;icon&quot;:&quot;ico-numbers&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;number&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;numeric-entry&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Numeric&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;precision&quot;:0,&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;4c09c9ec-01ba-3cdb-6384-73d9a3fd75f6&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;text-entry&quot;,&quot;icon&quot;:&quot;ico-text-short&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;text&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;text-entry&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Text Entry&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;min&quot;:1,&quot;max&quot;:300},&quot;isSoftDeleted&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/tasklist/${taskListLocation}/pending</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-task-list-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">90.4</stringProp>
              <stringProp name="ConstantTimer.delay">180.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add DropDown" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pendingItems&quot;:[{&quot;id&quot;:&quot;${myUUID}&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;calculation&quot;,&quot;icon&quot;:&quot;ico-calculator&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;numeric&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;calculation&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Calculation&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;formula&quot;]},&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;,&quot;precision&quot;:1,&quot;formula&quot;:[{&quot;value&quot;:&quot;3&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;80c4b7fb-e169-cd77-5983-51c4dfedb244&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;+&quot;,&quot;type&quot;:&quot;OPERATOR&quot;,&quot;key&quot;:&quot;9b149c84-4129-255e-e539-9d7410734955&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;4&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;c6e058ad-a7f4-8784-c39b-8de9aee75efd&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;1083dd6d-f6e5-6abc-6139-6375fb4951c3&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;file-upload&quot;,&quot;icon&quot;:&quot;ico-upload&quot;,&quot;classification&quot;:&quot;upload&quot;,&quot;inputType&quot;:&quot;upload&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;file-upload&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;File Upload&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;fileTypes&quot;:[{&quot;display&quot;:&quot;PDF&quot;},{&quot;display&quot;:&quot;PNG&quot;},{&quot;display&quot;:&quot;GIF&quot;},{&quot;display&quot;:&quot;JPEG&quot;},{&quot;display&quot;:&quot;TXT&quot;},{&quot;display&quot;:&quot;DOC&quot;},{&quot;display&quot;:&quot;DOCX&quot;},{&quot;display&quot;:&quot;PPTX&quot;},{&quot;display&quot;:&quot;XLS&quot;},{&quot;display&quot;:&quot;XLSX&quot;},{&quot;display&quot;:&quot;PPT&quot;}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;5e213b58-6252-2c65-52cb-df2d8bd7c3ad&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;signature&quot;,&quot;icon&quot;:&quot;ico-pencil&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;signature&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;signature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Signature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;sigVal&quot;:1,&quot;allowAuto&quot;:false},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;0be2a787-b181-3325-3cfe-8e0eb57bde23&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;employee&quot;,&quot;icon&quot;:&quot;ico-human&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;select&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;employee&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Select Employee&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;bf6c0c54-269a-9d23-0ad5-fc355037719c&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;timepicker&quot;,&quot;icon&quot;:&quot;ico-clock&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;timepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Time_Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;acceptableTimeRange&quot;:{&quot;start&quot;:&quot;2017-11-15T10:00:00.000Z&quot;,&quot;end&quot;:&quot;2017-11-15T10:00:00.000Z&quot;}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;f60d2422-4b53-6ba8-8d0d-a1048f97edc1&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;datepicker&quot;,&quot;icon&quot;:&quot;ico-date&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;datepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Date Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;currentDay&quot;:true,&quot;acceptableDateRange&quot;:{&quot;daysToStart&quot;:0,&quot;daysToEnd&quot;:0}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;3b28e407-1378-0840-06a3-599a13ab1fba&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;temperature&quot;,&quot;icon&quot;:&quot;ico-thermometer&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;number&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;temperature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Temperature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;minValue&quot;,&quot;maxValue&quot;]},&quot;minValue&quot;:&quot;3&quot;,&quot;maxValue&quot;:&quot;33&quot;,&quot;selectedUnitIndex&quot;:1,&quot;unit&quot;:&quot;Â°C&quot;,&quot;requireFollowUp&quot;:false},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;0d53c590-c015-1c9b-d8fe-758107123930&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;rating&quot;,&quot;icon&quot;:&quot;ico-star&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;rating&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;rating&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Rating&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;ratingScale&quot;:&quot;stars&quot;,&quot;ratingDescription&quot;:{&quot;1&quot;:&quot;&quot;,&quot;2&quot;:&quot;&quot;,&quot;3&quot;:&quot;&quot;,&quot;4&quot;:&quot;&quot;,&quot;5&quot;:&quot;&quot;}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;4f9d2f81-4c3f-c78d-6e24-9983d35118f8&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;numeric-entry&quot;,&quot;icon&quot;:&quot;ico-numbers&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;number&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;numeric-entry&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Numeric&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;precision&quot;:0,&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;4c09c9ec-01ba-3cdb-6384-73d9a3fd75f6&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;text-entry&quot;,&quot;icon&quot;:&quot;ico-text-short&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;text&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;text-entry&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Text Entry&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;min&quot;:1,&quot;max&quot;:300},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;dd542d64-31cd-67da-a6f9-d21a0f2345e1&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;dropdown&quot;,&quot;icon&quot;:&quot;ico-list&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;select&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;dropdown&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Dropdown&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[{&quot;id&quot;:&quot;a649f6c0-3a6f-d0ae-fb77-8f958a629365&quot;,&quot;error&quot;:&quot;fieldRequired&quot;}],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;options&quot;:[{&quot;id&quot;:&quot;a649f6c0-3a6f-d0ae-fb77-8f958a629365&quot;,&quot;display&quot;:&quot;&quot;}],&quot;followupOperator&quot;:{&quot;name&quot;:&quot;is&quot;},&quot;followupField&quot;:{&quot;id&quot;:&quot;a649f6c0-3a6f-d0ae-fb77-8f958a629365&quot;,&quot;display&quot;:&quot;&quot;}},&quot;isSoftDeleted&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/tasklist/${taskListLocation}/pending</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-task-list-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">92.0</stringProp>
              <stringProp name="ConstantTimer.delay">184.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Yes_No" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pendingItems&quot;:[{&quot;id&quot;:&quot;${myUUID}&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;calculation&quot;,&quot;icon&quot;:&quot;ico-calculator&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;numeric&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;calculation&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Calculation&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;formula&quot;]},&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;,&quot;precision&quot;:1,&quot;formula&quot;:[{&quot;value&quot;:&quot;3&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;80c4b7fb-e169-cd77-5983-51c4dfedb244&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;+&quot;,&quot;type&quot;:&quot;OPERATOR&quot;,&quot;key&quot;:&quot;9b149c84-4129-255e-e539-9d7410734955&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;4&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;c6e058ad-a7f4-8784-c39b-8de9aee75efd&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;1083dd6d-f6e5-6abc-6139-6375fb4951c3&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;file-upload&quot;,&quot;icon&quot;:&quot;ico-upload&quot;,&quot;classification&quot;:&quot;upload&quot;,&quot;inputType&quot;:&quot;upload&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;file-upload&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;File Upload&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;fileTypes&quot;:[{&quot;display&quot;:&quot;PDF&quot;},{&quot;display&quot;:&quot;PNG&quot;},{&quot;display&quot;:&quot;GIF&quot;},{&quot;display&quot;:&quot;JPEG&quot;},{&quot;display&quot;:&quot;TXT&quot;},{&quot;display&quot;:&quot;DOC&quot;},{&quot;display&quot;:&quot;DOCX&quot;},{&quot;display&quot;:&quot;PPTX&quot;},{&quot;display&quot;:&quot;XLS&quot;},{&quot;display&quot;:&quot;XLSX&quot;},{&quot;display&quot;:&quot;PPT&quot;}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;5e213b58-6252-2c65-52cb-df2d8bd7c3ad&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;signature&quot;,&quot;icon&quot;:&quot;ico-pencil&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;signature&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;signature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Signature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;sigVal&quot;:1,&quot;allowAuto&quot;:false},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;0be2a787-b181-3325-3cfe-8e0eb57bde23&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;employee&quot;,&quot;icon&quot;:&quot;ico-human&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;select&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;employee&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Select Employee&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;bf6c0c54-269a-9d23-0ad5-fc355037719c&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;timepicker&quot;,&quot;icon&quot;:&quot;ico-clock&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;timepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Time_Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;acceptableTimeRange&quot;:{&quot;start&quot;:&quot;2017-11-15T10:00:00.000Z&quot;,&quot;end&quot;:&quot;2017-11-15T10:00:00.000Z&quot;}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;f60d2422-4b53-6ba8-8d0d-a1048f97edc1&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;datepicker&quot;,&quot;icon&quot;:&quot;ico-date&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;datepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Date Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;currentDay&quot;:true,&quot;acceptableDateRange&quot;:{&quot;daysToStart&quot;:0,&quot;daysToEnd&quot;:0}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;3b28e407-1378-0840-06a3-599a13ab1fba&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;temperature&quot;,&quot;icon&quot;:&quot;ico-thermometer&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;number&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;temperature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Temperature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;minValue&quot;,&quot;maxValue&quot;]},&quot;minValue&quot;:&quot;3&quot;,&quot;maxValue&quot;:&quot;33&quot;,&quot;selectedUnitIndex&quot;:1,&quot;unit&quot;:&quot;Â°C&quot;,&quot;requireFollowUp&quot;:false},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;0d53c590-c015-1c9b-d8fe-758107123930&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;rating&quot;,&quot;icon&quot;:&quot;ico-star&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;rating&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;rating&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Rating&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;ratingScale&quot;:&quot;stars&quot;,&quot;ratingDescription&quot;:{&quot;1&quot;:&quot;&quot;,&quot;2&quot;:&quot;&quot;,&quot;3&quot;:&quot;&quot;,&quot;4&quot;:&quot;&quot;,&quot;5&quot;:&quot;&quot;}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;4f9d2f81-4c3f-c78d-6e24-9983d35118f8&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;numeric-entry&quot;,&quot;icon&quot;:&quot;ico-numbers&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;number&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;numeric-entry&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Numeric&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;precision&quot;:0,&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;4c09c9ec-01ba-3cdb-6384-73d9a3fd75f6&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;text-entry&quot;,&quot;icon&quot;:&quot;ico-text-short&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;text&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;text-entry&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Text Entry&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;min&quot;:1,&quot;max&quot;:300},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;dd542d64-31cd-67da-a6f9-d21a0f2345e1&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;dropdown&quot;,&quot;icon&quot;:&quot;ico-list&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;select&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;dropdown&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Dropdown&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[{&quot;id&quot;:&quot;a649f6c0-3a6f-d0ae-fb77-8f958a629365&quot;,&quot;error&quot;:&quot;fieldRequired&quot;}],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;options&quot;:[{&quot;id&quot;:&quot;a649f6c0-3a6f-d0ae-fb77-8f958a629365&quot;,&quot;display&quot;:&quot;&quot;}],&quot;followupOperator&quot;:{&quot;name&quot;:&quot;is&quot;},&quot;followupField&quot;:{&quot;id&quot;:&quot;a649f6c0-3a6f-d0ae-fb77-8f958a629365&quot;,&quot;display&quot;:&quot;&quot;}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;954480f2-6cb8-7075-84bf-03e91b6d15d3&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;yes-no&quot;,&quot;icon&quot;:&quot;ico-yes-no&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;button-group&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;yes-no&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Yes_No&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;followupConditions&quot;:{&quot;followupIsSelection&quot;:&quot;&quot;,&quot;followupOptionSelection&quot;:{&quot;id&quot;:&quot;yes&quot;,&quot;display&quot;:&quot;Yes&quot;}},&quot;selected&quot;:0,&quot;options&quot;:[{&quot;id&quot;:&quot;yes&quot;,&quot;display&quot;:&quot;Yes&quot;},{&quot;id&quot;:&quot;no&quot;,&quot;display&quot;:&quot;No&quot;}]},&quot;isSoftDeleted&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/tasklist/${taskListLocation}/pending</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-task-list-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">94.80000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">189.60000000000002</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Checkbox" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pendingItems&quot;:[{&quot;id&quot;:&quot;${myUUID}&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;calculation&quot;,&quot;icon&quot;:&quot;ico-calculator&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;numeric&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;calculation&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Calculation&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;formula&quot;]},&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;,&quot;precision&quot;:1,&quot;formula&quot;:[{&quot;value&quot;:&quot;3&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;80c4b7fb-e169-cd77-5983-51c4dfedb244&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;+&quot;,&quot;type&quot;:&quot;OPERATOR&quot;,&quot;key&quot;:&quot;9b149c84-4129-255e-e539-9d7410734955&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;4&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;c6e058ad-a7f4-8784-c39b-8de9aee75efd&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;1083dd6d-f6e5-6abc-6139-6375fb4951c3&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;file-upload&quot;,&quot;icon&quot;:&quot;ico-upload&quot;,&quot;classification&quot;:&quot;upload&quot;,&quot;inputType&quot;:&quot;upload&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;file-upload&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;File Upload&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;fileTypes&quot;:[{&quot;display&quot;:&quot;PDF&quot;},{&quot;display&quot;:&quot;PNG&quot;},{&quot;display&quot;:&quot;GIF&quot;},{&quot;display&quot;:&quot;JPEG&quot;},{&quot;display&quot;:&quot;TXT&quot;},{&quot;display&quot;:&quot;DOC&quot;},{&quot;display&quot;:&quot;DOCX&quot;},{&quot;display&quot;:&quot;PPTX&quot;},{&quot;display&quot;:&quot;XLS&quot;},{&quot;display&quot;:&quot;XLSX&quot;},{&quot;display&quot;:&quot;PPT&quot;}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;5e213b58-6252-2c65-52cb-df2d8bd7c3ad&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;signature&quot;,&quot;icon&quot;:&quot;ico-pencil&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;signature&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;signature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Signature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;sigVal&quot;:1,&quot;allowAuto&quot;:false},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;0be2a787-b181-3325-3cfe-8e0eb57bde23&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;employee&quot;,&quot;icon&quot;:&quot;ico-human&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;select&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;employee&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Select Employee&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;bf6c0c54-269a-9d23-0ad5-fc355037719c&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;timepicker&quot;,&quot;icon&quot;:&quot;ico-clock&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;timepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Time_Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;acceptableTimeRange&quot;:{&quot;start&quot;:&quot;2017-11-15T10:00:00.000Z&quot;,&quot;end&quot;:&quot;2017-11-15T10:00:00.000Z&quot;}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;f60d2422-4b53-6ba8-8d0d-a1048f97edc1&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;datepicker&quot;,&quot;icon&quot;:&quot;ico-date&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;datepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Date Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;currentDay&quot;:true,&quot;acceptableDateRange&quot;:{&quot;daysToStart&quot;:0,&quot;daysToEnd&quot;:0}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;3b28e407-1378-0840-06a3-599a13ab1fba&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;temperature&quot;,&quot;icon&quot;:&quot;ico-thermometer&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;number&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;temperature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Temperature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;minValue&quot;,&quot;maxValue&quot;]},&quot;minValue&quot;:&quot;3&quot;,&quot;maxValue&quot;:&quot;33&quot;,&quot;selectedUnitIndex&quot;:1,&quot;unit&quot;:&quot;Â°C&quot;,&quot;requireFollowUp&quot;:false},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;0d53c590-c015-1c9b-d8fe-758107123930&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;rating&quot;,&quot;icon&quot;:&quot;ico-star&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;rating&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;rating&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Rating&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;ratingScale&quot;:&quot;stars&quot;,&quot;ratingDescription&quot;:{&quot;1&quot;:&quot;&quot;,&quot;2&quot;:&quot;&quot;,&quot;3&quot;:&quot;&quot;,&quot;4&quot;:&quot;&quot;,&quot;5&quot;:&quot;&quot;}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;4f9d2f81-4c3f-c78d-6e24-9983d35118f8&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;numeric-entry&quot;,&quot;icon&quot;:&quot;ico-numbers&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;number&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;numeric-entry&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Numeric&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;precision&quot;:0,&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;4c09c9ec-01ba-3cdb-6384-73d9a3fd75f6&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;text-entry&quot;,&quot;icon&quot;:&quot;ico-text-short&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;text&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;text-entry&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Text Entry&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;min&quot;:1,&quot;max&quot;:300},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;dd542d64-31cd-67da-a6f9-d21a0f2345e1&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;dropdown&quot;,&quot;icon&quot;:&quot;ico-list&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;select&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;dropdown&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Dropdown&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[{&quot;id&quot;:&quot;a649f6c0-3a6f-d0ae-fb77-8f958a629365&quot;,&quot;error&quot;:&quot;fieldRequired&quot;}],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;options&quot;:[{&quot;id&quot;:&quot;a649f6c0-3a6f-d0ae-fb77-8f958a629365&quot;,&quot;display&quot;:&quot;&quot;}],&quot;followupOperator&quot;:{&quot;name&quot;:&quot;is&quot;},&quot;followupField&quot;:{&quot;id&quot;:&quot;a649f6c0-3a6f-d0ae-fb77-8f958a629365&quot;,&quot;display&quot;:&quot;&quot;}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;954480f2-6cb8-7075-84bf-03e91b6d15d3&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;yes-no&quot;,&quot;icon&quot;:&quot;ico-yes-no&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;button-group&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;yes-no&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Yes_No&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;followupConditions&quot;:{&quot;followupIsSelection&quot;:&quot;&quot;,&quot;followupOptionSelection&quot;:{&quot;id&quot;:&quot;yes&quot;,&quot;display&quot;:&quot;Yes&quot;}},&quot;selected&quot;:0,&quot;options&quot;:[{&quot;id&quot;:&quot;yes&quot;,&quot;display&quot;:&quot;Yes&quot;},{&quot;id&quot;:&quot;no&quot;,&quot;display&quot;:&quot;No&quot;}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;5aa1c97e-16e1-a15f-9ac2-73c9f04ec1fc&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;checkbox&quot;,&quot;icon&quot;:&quot;ico-checked&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;checkbox&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;checkbox&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Checkbox&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[{&quot;id&quot;:&quot;8a7cb365-c310-3173-8d77-0fab8c6f86ae&quot;,&quot;error&quot;:&quot;fieldRequired&quot;}],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;options&quot;:[{&quot;id&quot;:&quot;8a7cb365-c310-3173-8d77-0fab8c6f86ae&quot;,&quot;display&quot;:&quot;&quot;}],&quot;orientation&quot;:false},&quot;isSoftDeleted&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/tasklist/${taskListLocation}/pending</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-task-list-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">90.80000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">181.60000000000002</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sumbit TaskList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;name&quot;:&quot;JPC ${myUUID}&quot;,&quot;description&quot;:&quot;&quot;,&quot;tasks&quot;:[{&quot;id&quot;:&quot;${myUUID}&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;calculation&quot;,&quot;icon&quot;:&quot;ico-calculator&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;numeric&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;calculation&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Calculation&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;formula&quot;]},&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;,&quot;precision&quot;:1,&quot;formula&quot;:[{&quot;value&quot;:&quot;3&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;80c4b7fb-e169-cd77-5983-51c4dfedb244&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;+&quot;,&quot;type&quot;:&quot;OPERATOR&quot;,&quot;key&quot;:&quot;9b149c84-4129-255e-e539-9d7410734955&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false},{&quot;value&quot;:&quot;4&quot;,&quot;type&quot;:&quot;OPERAND_NUMBER&quot;,&quot;key&quot;:&quot;c6e058ad-a7f4-8784-c39b-8de9aee75efd&quot;,&quot;taskId&quot;:&quot;&quot;,&quot;precedingInputValue&quot;:&quot;&quot;,&quot;highlightForDeletion&quot;:false}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;1083dd6d-f6e5-6abc-6139-6375fb4951c3&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;file-upload&quot;,&quot;icon&quot;:&quot;ico-upload&quot;,&quot;classification&quot;:&quot;upload&quot;,&quot;inputType&quot;:&quot;upload&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;file-upload&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;File Upload&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;fileTypes&quot;:[{&quot;display&quot;:&quot;PDF&quot;},{&quot;display&quot;:&quot;PNG&quot;},{&quot;display&quot;:&quot;GIF&quot;},{&quot;display&quot;:&quot;JPEG&quot;},{&quot;display&quot;:&quot;TXT&quot;},{&quot;display&quot;:&quot;DOC&quot;},{&quot;display&quot;:&quot;DOCX&quot;},{&quot;display&quot;:&quot;PPTX&quot;},{&quot;display&quot;:&quot;XLS&quot;},{&quot;display&quot;:&quot;XLSX&quot;},{&quot;display&quot;:&quot;PPT&quot;}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;5e213b58-6252-2c65-52cb-df2d8bd7c3ad&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;signature&quot;,&quot;icon&quot;:&quot;ico-pencil&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;signature&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;signature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Signature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;sigVal&quot;:1,&quot;allowAuto&quot;:false},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;0be2a787-b181-3325-3cfe-8e0eb57bde23&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;employee&quot;,&quot;icon&quot;:&quot;ico-human&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;select&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;employee&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Select Employee&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;bf6c0c54-269a-9d23-0ad5-fc355037719c&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;timepicker&quot;,&quot;icon&quot;:&quot;ico-clock&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;timepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Time_Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;acceptableTimeRange&quot;:{&quot;start&quot;:&quot;2017-11-15T10:00:00.000Z&quot;,&quot;end&quot;:&quot;2017-11-15T10:00:00.000Z&quot;}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;f60d2422-4b53-6ba8-8d0d-a1048f97edc1&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;datepicker&quot;,&quot;icon&quot;:&quot;ico-date&quot;,&quot;classification&quot;:&quot;picker&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;datepicker&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Date Picker&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;currentDay&quot;:true,&quot;acceptableDateRange&quot;:{&quot;daysToStart&quot;:0,&quot;daysToEnd&quot;:0}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;3b28e407-1378-0840-06a3-599a13ab1fba&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;temperature&quot;,&quot;icon&quot;:&quot;ico-thermometer&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;number&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;temperature&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Temperature&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;,&quot;minValue&quot;,&quot;maxValue&quot;]},&quot;minValue&quot;:&quot;3&quot;,&quot;maxValue&quot;:&quot;33&quot;,&quot;selectedUnitIndex&quot;:1,&quot;unit&quot;:&quot;Â°C&quot;,&quot;requireFollowUp&quot;:false},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;0d53c590-c015-1c9b-d8fe-758107123930&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;rating&quot;,&quot;icon&quot;:&quot;ico-star&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;rating&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;rating&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Rating&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;ratingScale&quot;:&quot;stars&quot;,&quot;ratingDescription&quot;:{&quot;1&quot;:&quot;&quot;,&quot;2&quot;:&quot;&quot;,&quot;3&quot;:&quot;&quot;,&quot;4&quot;:&quot;&quot;,&quot;5&quot;:&quot;&quot;}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;4f9d2f81-4c3f-c78d-6e24-9983d35118f8&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;numeric-entry&quot;,&quot;icon&quot;:&quot;ico-numbers&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;number&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;numeric-entry&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Numeric&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;precision&quot;:0,&quot;minValue&quot;:&quot;&quot;,&quot;maxValue&quot;:&quot;&quot;},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;4c09c9ec-01ba-3cdb-6384-73d9a3fd75f6&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;text-entry&quot;,&quot;icon&quot;:&quot;ico-text-short&quot;,&quot;classification&quot;:&quot;input&quot;,&quot;inputType&quot;:&quot;text&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;text-entry&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Text Entry&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;min&quot;:1,&quot;max&quot;:300},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;dd542d64-31cd-67da-a6f9-d21a0f2345e1&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;dropdown&quot;,&quot;icon&quot;:&quot;ico-list&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;select&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;dropdown&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Dropdown&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[{&quot;id&quot;:&quot;a649f6c0-3a6f-d0ae-fb77-8f958a629365&quot;,&quot;error&quot;:&quot;fieldRequired&quot;}],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;options&quot;:[{&quot;id&quot;:&quot;a649f6c0-3a6f-d0ae-fb77-8f958a629365&quot;,&quot;display&quot;:&quot;&quot;}],&quot;followupOperator&quot;:{&quot;name&quot;:&quot;is&quot;},&quot;followupField&quot;:{&quot;id&quot;:&quot;a649f6c0-3a6f-d0ae-fb77-8f958a629365&quot;,&quot;display&quot;:&quot;&quot;}},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;954480f2-6cb8-7075-84bf-03e91b6d15d3&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;yes-no&quot;,&quot;icon&quot;:&quot;ico-yes-no&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;button-group&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;yes-no&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Yes_No&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;followupConditions&quot;:{&quot;followupIsSelection&quot;:&quot;&quot;,&quot;followupOptionSelection&quot;:{&quot;id&quot;:&quot;yes&quot;,&quot;display&quot;:&quot;Yes&quot;}},&quot;selected&quot;:0,&quot;options&quot;:[{&quot;id&quot;:&quot;yes&quot;,&quot;display&quot;:&quot;Yes&quot;},{&quot;id&quot;:&quot;no&quot;,&quot;display&quot;:&quot;No&quot;}]},&quot;isSoftDeleted&quot;:false},{&quot;id&quot;:&quot;5aa1c97e-16e1-a15f-9ac2-73c9f04ec1fc&quot;,&quot;itemType&quot;:{&quot;id&quot;:&quot;checkbox&quot;,&quot;icon&quot;:&quot;ico-checked&quot;,&quot;classification&quot;:&quot;list&quot;,&quot;inputType&quot;:&quot;checkbox&quot;,&quot;category&quot;:&quot;TASK&quot;,&quot;typeId&quot;:&quot;checkbox&quot;},&quot;itemData&quot;:{&quot;label&quot;:&quot;Checkbox&quot;,&quot;description&quot;:&quot;&quot;,&quot;followup&quot;:{},&quot;dependentOn&quot;:[],&quot;reportingCategories&quot;:[],&quot;optional&quot;:false,&quot;followupEnabled&quot;:false,&quot;validation&quot;:{&quot;errors&quot;:[{&quot;id&quot;:&quot;8a7cb365-c310-3173-8d77-0fab8c6f86ae&quot;,&quot;error&quot;:&quot;fieldRequired&quot;}],&quot;dirtyFields&quot;:[&quot;label&quot;]},&quot;options&quot;:[{&quot;id&quot;:&quot;8a7cb365-c310-3173-8d77-0fab8c6f86ae&quot;,&quot;display&quot;:&quot;&quot;}],&quot;orientation&quot;:false},&quot;isSoftDeleted&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/tasklist/${taskListLocation}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-task-list-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">90.0</stringProp>
              <stringProp name="ConstantTimer.delay">180.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Publish task list" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/tasklist/${taskListLocation}/publish</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-task-list-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">89.60000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">179.20000000000002</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Get TaskList SysID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">sysIDTask</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">sysID Error</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Published TaskList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="where" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">%7B%22tasklistId%22%3A%20%7B%20%22%24eq%22%3A%20%22${taskListLocation}%22%20%7D%7D&amp;paging=limit%3A25%2Cpage%3A1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">where</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/resources/IWPublishedTaskList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-task-list-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">89.60000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">179.20000000000002</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get Sys_ID of Added Resource" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
              <stringProp name="RegexExtractor.refname">sys_id</stringProp>
              <stringProp name="RegexExtractor.regex">sys_id\&quot;:\&quot;(.*)\&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Workflow" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get AccessibleStores" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/config/accessibleStores</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-config-ui/</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Workflow All" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/workflow/all</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-config-ui/</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get AssignableItems" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/config/assignableItems</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="X-DevTools-Emulate-Network-Conditions-Client-Id" elementType="Header">
                  <stringProp name="Header.name">X-DevTools-Emulate-Network-Conditions-Client-Id</stringProp>
                  <stringProp name="Header.value">88D28FEECE33CF6D2F0F557551A9F2BD</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-config-ui/</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Workflow" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;Tasklist&quot;,&quot;name&quot;:&quot;JPC ${myUUID}&quot;,&quot;schedule&quot;:{&quot;appearsDates&quot;:&quot;fixed&quot;,&quot;startDate&quot;:{&quot;year&quot;:2018,&quot;month&quot;:3,&quot;date&quot;:27},&quot;ends&quot;:&quot;neverEnds&quot;,&quot;disableOnceOverdue&quot;:false,&quot;requireFollowup&quot;:false,&quot;completionPeriod&quot;:&quot;day&quot;,&quot;completionPeriodData&quot;:{&quot;hours&quot;:&quot;operating&quot;,&quot;fixedStartTime&quot;:{&quot;hours&quot;:4,&quot;minutes&quot;:0},&quot;fixedEndTime&quot;:{&quot;hours&quot;:23,&quot;minutes&quot;:0},&quot;operatingStartTime&quot;:{&quot;beforeAfter&quot;:&quot;before&quot;,&quot;openClose&quot;:&quot;open&quot;,&quot;hours&quot;:{&quot;hours&quot;:1,&quot;minutes&quot;:0}},&quot;operatingEndTime&quot;:{&quot;beforeAfter&quot;:&quot;before&quot;,&quot;openClose&quot;:&quot;close&quot;,&quot;hours&quot;:{&quot;hours&quot;:1,&quot;minutes&quot;:0}}},&quot;recurrencyData&quot;:{&quot;recurrencyType&quot;:&quot;daily&quot;,&quot;dailyRepeatPeriod&quot;:1,&quot;weeklyRepeatPeriod&quot;:1,&quot;weeklyRepeatOnDays&quot;:[1],&quot;monthlyRepeatByDayOf&quot;:&quot;month&quot;,&quot;monthlyRepeatPeriod&quot;:1,&quot;monthlyRepeatEveryMonths&quot;:1,&quot;monthlyRepeatDayOfWeek&quot;:1}},&quot;isSoftDeleted&quot;:false,&quot;itemData&quot;:{&quot;validation&quot;:{&quot;dirtyFields&quot;:[&quot;name&quot;],&quot;errors&quot;:[]},&quot;tasklistId&quot;:&quot;${sys_id}&quot;},&quot;hierarchyPath&quot;:&quot;::&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/workflow</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-workflow-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">90.80000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">181.60000000000002</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get Location of Added Resource" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
              <stringProp name="RegexExtractor.refname">workflowLocation</stringProp>
              <stringProp name="RegexExtractor.regex">\&quot;(.*)\&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Get SysID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">sysID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">sysID Error</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Second Workflow" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;Tasklist&quot;,&quot;name&quot;:&quot;JPC ${myUUID}&quot;,&quot;schedule&quot;:{&quot;appearsDates&quot;:&quot;fixed&quot;,&quot;startDate&quot;:{&quot;year&quot;:2018,&quot;month&quot;:3,&quot;date&quot;:27},&quot;ends&quot;:&quot;neverEnds&quot;,&quot;disableOnceOverdue&quot;:false,&quot;requireFollowup&quot;:false,&quot;completionPeriod&quot;:&quot;day&quot;,&quot;completionPeriodData&quot;:{&quot;hours&quot;:&quot;operating&quot;,&quot;fixedStartTime&quot;:{&quot;hours&quot;:4,&quot;minutes&quot;:0},&quot;fixedEndTime&quot;:{&quot;hours&quot;:23,&quot;minutes&quot;:0},&quot;operatingStartTime&quot;:{&quot;beforeAfter&quot;:&quot;before&quot;,&quot;openClose&quot;:&quot;open&quot;,&quot;hours&quot;:{&quot;hours&quot;:1,&quot;minutes&quot;:0}},&quot;operatingEndTime&quot;:{&quot;beforeAfter&quot;:&quot;before&quot;,&quot;openClose&quot;:&quot;close&quot;,&quot;hours&quot;:{&quot;hours&quot;:1,&quot;minutes&quot;:0}}},&quot;recurrencyData&quot;:{&quot;recurrencyType&quot;:&quot;daily&quot;,&quot;dailyRepeatPeriod&quot;:1,&quot;weeklyRepeatPeriod&quot;:1,&quot;weeklyRepeatOnDays&quot;:[1],&quot;monthlyRepeatByDayOf&quot;:&quot;month&quot;,&quot;monthlyRepeatPeriod&quot;:1,&quot;monthlyRepeatEveryMonths&quot;:1,&quot;monthlyRepeatDayOfWeek&quot;:1}},&quot;isSoftDeleted&quot;:false,&quot;itemData&quot;:{&quot;validation&quot;:{&quot;dirtyFields&quot;:[&quot;name&quot;],&quot;errors&quot;:[]},&quot;tasklistId&quot;:&quot;${sys_id}&quot;},&quot;hierarchyPath&quot;:&quot;::&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/workflow</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-workflow-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">90.80000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">181.60000000000002</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get Location of Added Resource" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
              <stringProp name="RegexExtractor.refname">taskListLocation2</stringProp>
              <stringProp name="RegexExtractor.regex">\&quot;(.*)\&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Get SysID2" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">sysID2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">sysID Error</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Workflow All" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/workflow/all</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-config-ui/</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get assigned Stores" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/config/store/all/assignments</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-workflow-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">90.4</stringProp>
              <stringProp name="ConstantTimer.delay">180.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Assign to Store" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;items&quot;:[&quot;${workflowLocation}&quot;,&quot;${taskListLocation2}&quot;],&quot;stores&quot;:[&quot;${store_Name}&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/item/assignment</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-config-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">90.80000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">181.60000000000002</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View All Assigned Workflows" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/config/store/all/assignments</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-workflow-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">90.4</stringProp>
              <stringProp name="ConstantTimer.delay">180.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View All Workflows" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/workflow/all</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-workflow-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">90.4</stringProp>
              <stringProp name="ConstantTimer.delay">180.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View All Workflows for Store" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/config/store/${store_Name}/assignments</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-workflow-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">90.4</stringProp>
              <stringProp name="ConstantTimer.delay">180.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View All Assigned workflows" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">tasklist.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${nspace}/config/item/${workflowLocation}/assignments</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://apps.bodhi-stg.io/clarifi/catalyst-iw-workflow-manager-ui/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">90.4</stringProp>
              <stringProp name="ConstantTimer.delay">180.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Write SysID to file" enabled="true">
            <stringProp name="cacheKey">b67260ff-18ca-43a3-9786-0c746ca1ce3b</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.commons.io.FileUtils;

String sysid = vars.get(&quot;sysID&quot;);
String sysid2 = vars.get(&quot;sysID2&quot;);
String tasklistlocation = vars.get(&quot;taskListLocation&quot;);
String namespace = vars.get(&quot;nspace&quot;);

FileUtils.writeStringToFile(new java.io.File(&quot;/data/flood/files/sysid.txt&quot;),&quot;${namespace},${sysid},${sysid2},${taskListLocation},\r\n&quot;,&quot;UTF-8&quot;,true);
	 </stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree/>
        </hashTree>
        <JSR223Listener guiclass="TestBeanGUI" testclass="JSR223Listener" testname="Grafana Threads Listener" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.util.EntityUtils;
import org.apache.jmeter.threads.JMeterContextService;

try {
	
	def tc = JMeterContextService.getThreadCounts();
	def testStarted = props.get(&quot;testStarted&quot;);
	def testEnded = props.get(&quot;testEnded&quot;);
	int aThreads = tc.activeThreads;
	int sThreads = tc.startedThreads;
	int fThreads = tc.finishedThreads;

	if ( testStarted == null &amp;&amp; testEnded == null &amp;&amp; sThreads &gt; 0 ){
		Tests = new StringBuilder();
		Tests.append(&quot;Tests&quot;)
		.append(&quot;,appName=&quot;)
		.append(vars.get(&quot;AppName&quot;))
		.append(&quot;,testId=&quot;)
		.append(vars.get(&quot;Time&quot;)) //customize
		.append(&quot; startTest=&quot;)
		.append(vars.get(&quot;TESTSTART.MS&quot;))
		.append(&quot;,status=&quot;)
		.append(&apos;&quot;started&quot;&apos;)
		.append(&quot; &quot;)
		.append(System.currentTimeMillis())
		.append(&quot;000000&quot;);
		
		//log.info(&quot;Tests &quot; + Tests);
		props.put(&quot;testStarted&quot;,&quot;1&quot;);
		PostMeasurement(Tests.toString());
	}
	if ( testStarted != null &amp;&amp; testEnded == null &amp;&amp; fThreads &gt; 0 ){
		Teste = new StringBuilder();
		Teste.append(&quot;Tests&quot;)
		.append(&quot;,appName=&quot;)
		.append(vars.get(&quot;AppName&quot;))
		.append(&quot;,testId=&quot;)
		.append(vars.get(&quot;Time&quot;))
		.append(&quot; endTest=&quot;)
		.append(System.currentTimeMillis())
		.append(&quot;,status=&quot;)
		.append(&apos;&quot;ended&quot;&apos;)
		.append(&quot; &quot;)
		.append(System.currentTimeMillis())
		.append(&quot;000000&quot;);
			
		//log.info(&quot;Teste &quot; + Teste);
		props.put(&quot;testEnded&quot;,&quot;1&quot;);
		PostMeasurement(Teste.toString());
	}
	
	Threads = new StringBuilder();
	Threads.append(&quot;Threads&quot;)
	.append(&quot;,appName=&quot;)
	.append(vars.get(&quot;AppName&quot;))
	.append(&quot;,testId=&quot;)
	.append(vars.get(&quot;Time&quot;))
	.append(&quot; activeThreads=&quot;)
	.append(aThreads.toString())
	.append(&quot; &quot;)
	.append(System.currentTimeMillis())
	.append(&quot;000000&quot;);

	//log.info(&quot;Threads &quot; + Threads);
	PostMeasurement(Threads.toString());
	//Thread.sleep(1000);
	
} catch (Exception e) {
	log.error(&quot;Error in Grafana Threads Listener : &quot; +e );
}

void PostMeasurement(String Metric) {
	def httpclient = new DefaultHttpClient(new BasicHttpParams());
	def httpPost = new HttpPost();
	httpPost.setURI(new URI(vars.get(&quot;Grafana&quot;)));
	httpPost.setEntity(new StringEntity(Metric));
	HttpResponse response = httpclient.execute(httpPost);
	EntityUtils.consumeQuietly(response.getEntity());
}
</stringProp>
        </JSR223Listener>
        <hashTree/>
        <JSR223Listener guiclass="TestBeanGUI" testclass="JSR223Listener" testname="Grafana Threads Listener" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.util.EntityUtils;
import org.apache.jmeter.threads.JMeterContextService;

try {
	
	def tc = JMeterContextService.getThreadCounts();
	def testStarted = props.get(&quot;testStarted&quot;);
	def testEnded = props.get(&quot;testEnded&quot;);
	int aThreads = tc.activeThreads;
	int sThreads = tc.startedThreads;
	int fThreads = tc.finishedThreads;

	if ( testStarted == null &amp;&amp; testEnded == null &amp;&amp; sThreads &gt; 0 ){
		Tests = new StringBuilder();
		Tests.append(&quot;Tests&quot;)
		.append(&quot;,appName=&quot;)
		.append(vars.get(&quot;AppName&quot;))
		.append(&quot;,testId=&quot;)
		.append(vars.get(&quot;Time&quot;)) //customize
		.append(&quot; startTest=&quot;)
		.append(vars.get(&quot;TESTSTART.MS&quot;))
		.append(&quot;,status=&quot;)
		.append(&apos;&quot;started&quot;&apos;)
		.append(&quot; &quot;)
		.append(System.currentTimeMillis())
		.append(&quot;000000&quot;);
		
		//log.info(&quot;Tests &quot; + Tests);
		props.put(&quot;testStarted&quot;,&quot;1&quot;);
		PostMeasurement(Tests.toString());
	}
	if ( testStarted != null &amp;&amp; testEnded == null &amp;&amp; fThreads &gt; 0 ){
		Teste = new StringBuilder();
		Teste.append(&quot;Tests&quot;)
		.append(&quot;,appName=&quot;)
		.append(vars.get(&quot;AppName&quot;))
		.append(&quot;,testId=&quot;)
		.append(vars.get(&quot;Time&quot;))
		.append(&quot; endTest=&quot;)
		.append(System.currentTimeMillis())
		.append(&quot;,status=&quot;)
		.append(&apos;&quot;ended&quot;&apos;)
		.append(&quot; &quot;)
		.append(System.currentTimeMillis())
		.append(&quot;000000&quot;);
			
		//log.info(&quot;Teste &quot; + Teste);
		props.put(&quot;testEnded&quot;,&quot;1&quot;);
		PostMeasurement(Teste.toString());
	}
	
	Threads = new StringBuilder();
	Threads.append(&quot;Threads&quot;)
	.append(&quot;,appName=&quot;)
	.append(vars.get(&quot;AppName&quot;))
	.append(&quot;,testId=&quot;)
	.append(vars.get(&quot;Time&quot;))
	.append(&quot; activeThreads=&quot;)
	.append(aThreads.toString())
	.append(&quot; &quot;)
	.append(System.currentTimeMillis())
	.append(&quot;000000&quot;);

	//log.info(&quot;Threads &quot; + Threads);
	PostMeasurement(Threads.toString());
	//Thread.sleep(1000);
	
} catch (Exception e) {
	log.error(&quot;Error in Grafana Threads Listener : &quot; +e );
}

void PostMeasurement(String Metric) {
	def httpclient = new DefaultHttpClient(new BasicHttpParams());
	def httpPost = new HttpPost();
	httpPost.setURI(new URI(vars.get(&quot;Grafana&quot;)));
	httpPost.setEntity(new StringEntity(Metric));
	HttpResponse response = httpclient.execute(httpPost);
	EntityUtils.consumeQuietly(response.getEntity());
}
</stringProp>
        </JSR223Listener>
        <hashTree/>
        <JSR223Listener guiclass="TestBeanGUI" testclass="JSR223Listener" testname="Grafana Metrics Listener" enabled="false">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.util.EntityUtils;

try {
	
	Metrics = new StringBuilder();
	String status = &quot;F&quot;;
	if (sampleResult.isSuccessful())
		status = &quot;P&quot;;
	if (sampleResult.getSampleLabel().startsWith(&quot;/&quot;))
		Metrics.append(&quot;Requests&quot;)
	else
		Metrics.append(&quot;Transactions&quot;)
	
	Metrics.append(&quot;,appName=&quot;)
	.append(vars.get(&quot;AppName&quot;))
	.append(&quot;,requestName=&quot;)
	.append(escapeValue(sampleResult.getSampleLabel()))
	.append(&quot;,status=&quot;)
	.append(status)
	.append(&quot; responseTime=&quot;)
	.append(sampleResult.getTime())
	.append(&quot;,responseCode=&quot;)
	.append(sampleResult.getResponseCode())
	.append(&quot;,sentBytes=&quot;)
	.append(sampleResult.getSentBytes())
	.append(&quot;,receivedBytes=&quot;)
	.append(sampleResult.getBytesAsLong())
	.append(&quot;,errorCount=&quot;)
	.append(sampleResult.getErrorCount())

	if (sampleResult.getResponseCode().toInteger() &gt; 202)
	{
	Metrics.append(&quot;,responseMessage=&quot;)
	.append(&apos;&quot;&apos; + escapeValue(sampleResult.getResponseMessage()) + &apos;&quot;&apos;)
	}
	
	Metrics.append(&quot; &quot;)
	.append(sampleResult.getTimeStamp())
	.append(&quot;000000&quot;);

	log.info(&quot;Metrics &quot; + Metrics);
	PostMeasurement(Metrics.toString());
	//Thread.sleep(1000);
} catch (Exception e) {
	log.error(&quot;Error in Grafana Metrics Listener : &quot; +e );
}

String escapeValue(String val) {
	val = val.replaceAll(&quot;,&quot;, &quot;\\\\,&quot;)
		.replaceAll(&quot; &quot;, &quot;\\\\ &quot;)
		.replaceAll(&quot;=&quot;, &quot;\\\\=&quot;)
		.replaceAll(&quot;\n&quot;, &quot; &quot;)
		.replaceAll(&quot;\r&quot;, &quot; &quot;)
		.replaceAll(&quot;\t&quot;, &quot; &quot;)
		.trim()
	return val
}


void PostMeasurement(String Metrics) {
	def httpclient = new DefaultHttpClient(new BasicHttpParams());
	def httpPost = new HttpPost();
	httpPost.setURI(new URI(vars.get(&quot;Grafana&quot;)));
	httpPost.setEntity(new StringEntity(Metrics));
	HttpResponse response = httpclient.execute(httpPost);
	EntityUtils.consumeQuietly(response.getEntity());
}
</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Listener>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">true</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDown Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">20</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1523264224000</longProp>
        <longProp name="ThreadGroup.end_time">1523264224000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </PostThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="Origin" elementType="Header">
              <stringProp name="Header.name">Origin</stringProp>
              <stringProp name="Header.value">https://apps.bodhi-qa.io</stringProp>
            </elementProp>
            <elementProp name="User-Agent" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</stringProp>
            </elementProp>
            <elementProp name="Content-Type" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="Accept" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">*/*</stringProp>
            </elementProp>
            <elementProp name="Accept-Encoding" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate, br</stringProp>
            </elementProp>
            <elementProp name="Accept-Language" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
            </elementProp>
            <elementProp name="Cookie" elementType="Header">
              <stringProp name="Header.name">Cookie</stringProp>
              <stringProp name="Header.value">ID_TOKEN=${__property(${nspace})}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">sysid.txt</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">nspace,sysID,sysID2,taskListLocation</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Delete Created Data" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete First Workflow by SysID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${nspace}/resources/IWWorkflowItem?where=%7B%22sys_id%22%3A%7B%22%24eq%22%3A%22${sysID}%22%7D%7D </stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://tools.bodhi-stg.io/reports/</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Second Workflow by SysID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${nspace}/resources/IWWorkflowItem?where=%7B%22sys_id%22%3A%7B%22%24eq%22%3A%22${sysID2}%22%7D%7D </stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://tools.bodhi-stg.io/reports/</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete TaskList by SysID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.bodhi-stg.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${nspace}/resources/IWTaskList?where=%7B%22sys_id%22%3A%7B%22%24eq%22%3A%22${taskListLocation}%22%7D%7D </stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://tools.bodhi-stg.io/reports/</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
